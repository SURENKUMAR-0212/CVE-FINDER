package com.mvc.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.servlet.ModelAndView;

import com.exception.QueryNotFoundException;
import com.mvc.model.API;
import com.mvc.model.GitApiFetch;
import com.mvc.view.ViewParser;

@Controller
public class SearchController {

	// to fetch only 10 results from API
	private final String FIXED_COUNT_PER_PAGE = "8";

	@Autowired
	API api;

	@Autowired
	ValidationController validationController;
	
	@Autowired
	ViewParser viewPrser;
	
	RestTemplate restTemplate;
	ResponseEntity<GitApiFetch> gitApiFetch;

	public SearchController() {
		System.out.println("Spring creating an object for searchController.......");
		restTemplate = new RestTemplate();
	}

	@RequestMapping("/search")
	public ModelAndView search(HttpServletRequest request) {
		
		System.out.println("Inside search......");

		// getting query from user
		String query = request.getParameter("query");

		
		if(validationController.validateQuery(query)) {
			throw new QueryNotFoundException();
		}
		
		// API parsing
		String repo_search = api.getRepository_search_url()
				.replace("{query}", query)
				.replace("{count}",FIXED_COUNT_PER_PAGE);

		gitApiFetch = restTemplate.getForEntity(repo_search, GitApiFetch.class);

		validationController.validateResponse(gitApiFetch);
		
		return viewPrser.parseGitResponse(gitApiFetch);

//		System.out.println("result for first page "+
//							gitApiFetch
//							.getBody()
//							.getItems()
//							.size());


	}
	

}
